LOAD 'pg_hint_plan';
SET pg_hint_plan.enable TO on;
SET pg_hint_plan.debug_print TO on;
SET client_min_messages TO LOG;
SET search_path TO public;
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
                    QUERY PLAN                    
--------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Merge Join
         Merge Cond: (t1.c1 = t4.c1)
         ->  Merge Join
               Merge Cond: (t1.c1 = t3.c1)
               ->  Index Scan using t1_pkey on t1
               ->  Index Scan using t3_pkey on t3
         ->  Index Scan using t4_pkey on t4
   ->  Sort
         Sort Key: t2.c1
         ->  Seq Scan on t2
(12 rows)

----
---- No. L-1-1 specified pattern of the object name
----
-- No. L-1-1-1
/*+Leading(t4 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t2 t3 t1)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                      
------------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Index Scan using t1_pkey on t1
   ->  Sort
         Sort Key: t2.c1
         ->  Hash Join
               Hash Cond: (t3.c1 = t2.c1)
               ->  Seq Scan on t3
               ->  Hash
                     ->  Hash Join
                           Hash Cond: (t4.c1 = t2.c1)
                           ->  Seq Scan on t4
                           ->  Hash
                                 ->  Seq Scan on t2
(14 rows)

-- No. L-1-1-2
/*+Leading(t4 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
LOG:  pg_hint_plan:
used hint:
not used hint:
Leading(t4 t2 t3 t1)
duplication hint:
error hint:

                      QUERY PLAN                      
------------------------------------------------------
 Merge Join
   Merge Cond: (t_1.c1 = t_2.c1)
   ->  Merge Join
         Merge Cond: (t_1.c1 = t_4.c1)
         ->  Merge Join
               Merge Cond: (t_1.c1 = t_3.c1)
               ->  Index Scan using t1_pkey on t1 t_1
               ->  Index Scan using t3_pkey on t3 t_3
         ->  Index Scan using t4_pkey on t4 t_4
   ->  Sort
         Sort Key: t_2.c1
         ->  Seq Scan on t2 t_2
(12 rows)

-- No. L-1-1-3
/*+Leading(t_4 t_2 t_3 t_1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t_4 t_2 t_3 t_1)
not used hint:
duplication hint:
error hint:

                       QUERY PLAN                       
--------------------------------------------------------
 Merge Join
   Merge Cond: (t_1.c1 = t_2.c1)
   ->  Index Scan using t1_pkey on t1 t_1
   ->  Sort
         Sort Key: t_2.c1
         ->  Hash Join
               Hash Cond: (t_3.c1 = t_2.c1)
               ->  Seq Scan on t3 t_3
               ->  Hash
                     ->  Hash Join
                           Hash Cond: (t_4.c1 = t_2.c1)
                           ->  Seq Scan on t4 t_4
                           ->  Hash
                                 ->  Seq Scan on t2 t_2
(14 rows)

----
---- No. L-1-2 specified schema name in the hint option
----
-- No. L-1-2-1
/*+Leading(t4 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t2 t3 t1)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                      
------------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Index Scan using t1_pkey on t1
   ->  Sort
         Sort Key: t2.c1
         ->  Hash Join
               Hash Cond: (t3.c1 = t2.c1)
               ->  Seq Scan on t3
               ->  Hash
                     ->  Hash Join
                           Hash Cond: (t4.c1 = t2.c1)
                           ->  Seq Scan on t4
                           ->  Hash
                                 ->  Seq Scan on t2
(14 rows)

-- No. L-1-2-2
/*+Leading(s1.t4 s1.t2 s1.t3 s1.t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
not used hint:
Leading(s1.t4 s1.t2 s1.t3 s1.t1)
duplication hint:
error hint:

                    QUERY PLAN                    
--------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Merge Join
         Merge Cond: (t1.c1 = t4.c1)
         ->  Merge Join
               Merge Cond: (t1.c1 = t3.c1)
               ->  Index Scan using t1_pkey on t1
               ->  Index Scan using t3_pkey on t3
         ->  Index Scan using t4_pkey on t4
   ->  Sort
         Sort Key: t2.c1
         ->  Seq Scan on t2
(12 rows)

----
---- No. L-1-3 table doesn't exist in the hint option
----
-- No. L-1-3-1
/*+Leading(t4 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t2 t3 t1)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                      
------------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Index Scan using t1_pkey on t1
   ->  Sort
         Sort Key: t2.c1
         ->  Hash Join
               Hash Cond: (t3.c1 = t2.c1)
               ->  Seq Scan on t3
               ->  Hash
                     ->  Hash Join
                           Hash Cond: (t4.c1 = t2.c1)
                           ->  Seq Scan on t4
                           ->  Hash
                                 ->  Seq Scan on t2
(14 rows)

-- No. L-1-3-1
/*+Leading(t5 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t5 t2 t3 t1)
not used hint:
duplication hint:
error hint:

                   QUERY PLAN                   
------------------------------------------------
 Nested Loop
   ->  Merge Join
         Merge Cond: (t1.c1 = t2.c1)
         ->  Index Scan using t1_pkey on t1
         ->  Sort
               Sort Key: t2.c1
               ->  Hash Join
                     Hash Cond: (t3.c1 = t2.c1)
                     ->  Seq Scan on t3
                     ->  Hash
                           ->  Seq Scan on t2
   ->  Index Scan using t4_pkey on t4
         Index Cond: (c1 = t1.c1)
(13 rows)

----
---- No. L-1-4 conflict table name
----
-- No. L-1-4-1
/*+Leading(t4 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t2 t3 t1)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                      
------------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Index Scan using t1_pkey on t1
   ->  Sort
         Sort Key: t2.c1
         ->  Hash Join
               Hash Cond: (t3.c1 = t2.c1)
               ->  Seq Scan on t3
               ->  Hash
                     ->  Hash Join
                           Hash Cond: (t4.c1 = t2.c1)
                           ->  Seq Scan on t4
                           ->  Hash
                                 ->  Seq Scan on t2
(14 rows)

-- No. L-1-4-2
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
                    QUERY PLAN                    
--------------------------------------------------
 Merge Join
   Merge Cond: (s1.t1.c1 = s2.t1.c1)
   ->  Merge Join
         Merge Cond: (s1.t1.c1 = t2.c1)
         ->  Merge Join
               Merge Cond: (s1.t1.c1 = t3.c1)
               ->  Index Scan using t1_pkey on t1
               ->  Index Scan using t3_pkey on t3
         ->  Index Scan using t2_pkey on t2
   ->  Sort
         Sort Key: s2.t1.c1
         ->  Seq Scan on t1
(12 rows)

/*+Leading(t1 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
INFO:  hint syntax error at or near "Leading(t1 t2 t3 t1)"
DETAIL:  Relation name "t1" is ambiguous.
LOG:  pg_hint_plan:
used hint:
not used hint:
Leading(t1 t2 t3 t1)
duplication hint:
error hint:

                    QUERY PLAN                    
--------------------------------------------------
 Merge Join
   Merge Cond: (s1.t1.c1 = s2.t1.c1)
   ->  Merge Join
         Merge Cond: (s1.t1.c1 = t2.c1)
         ->  Merge Join
               Merge Cond: (s1.t1.c1 = t3.c1)
               ->  Index Scan using t1_pkey on t1
               ->  Index Scan using t3_pkey on t3
         ->  Index Scan using t2_pkey on t2
   ->  Sort
         Sort Key: s2.t1.c1
         ->  Seq Scan on t1
(12 rows)

/*+Leading(s1.t1 t2 t3 s2.t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
LOG:  pg_hint_plan:
used hint:
Leading(s1.t1 t2 t3 s2.t1)
not used hint:
duplication hint:
error hint:

                    QUERY PLAN                    
--------------------------------------------------
 Nested Loop
   ->  Nested Loop
         ->  Merge Join
               Merge Cond: (t3.c1 = t2.c1)
               ->  Index Scan using t3_pkey on t3
               ->  Sort
                     Sort Key: t2.c1
                     ->  Seq Scan on t2
         ->  Index Scan using t1_pkey on t1
               Index Cond: (c1 = t2.c1)
   ->  Index Scan using t1_pkey on t1
         Index Cond: (c1 = t2.c1)
(12 rows)

EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 s2t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2t1.c1;
                    QUERY PLAN                    
--------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = s2t1.c1)
   ->  Merge Join
         Merge Cond: (t1.c1 = t2.c1)
         ->  Merge Join
               Merge Cond: (t1.c1 = t3.c1)
               ->  Index Scan using t1_pkey on t1
               ->  Index Scan using t3_pkey on t3
         ->  Index Scan using t2_pkey on t2
   ->  Sort
         Sort Key: s2t1.c1
         ->  Seq Scan on t1 s2t1
(12 rows)

/*+Leading(s2t1 t1 t3 t2)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 s2t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2t1.c1;
LOG:  pg_hint_plan:
used hint:
Leading(s2t1 t1 t3 t2)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                       
-------------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Merge Join
         Merge Cond: (t1.c1 = t3.c1)
         ->  Merge Join
               Merge Cond: (t1.c1 = s2t1.c1)
               ->  Index Scan using t1_pkey on t1
               ->  Index Scan using t1_pkey on t1 s2t1
         ->  Index Scan using t3_pkey on t3
   ->  Sort
         Sort Key: t2.c1
         ->  Seq Scan on t2
(12 rows)

-- No. L-1-4-3
EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
                           QUERY PLAN                           
----------------------------------------------------------------
 Merge Join
   Merge Cond: (s1.t1.c1 = s1.t2.c1)
   InitPlan 1 (returns $0)
     ->  Aggregate
           ->  Merge Join
                 Merge Cond: (s1.t1.c1 = s1.t2.c1)
                 ->  Merge Join
                       Merge Cond: (s1.t1.c1 = s1.t4.c1)
                       ->  Merge Join
                             Merge Cond: (s1.t1.c1 = s1.t3.c1)
                             ->  Index Scan using t1_pkey on t1
                             ->  Index Scan using t3_pkey on t3
                       ->  Index Scan using t4_pkey on t4
                 ->  Sort
                       Sort Key: s1.t2.c1
                       ->  Seq Scan on t2
   ->  Merge Join
         Merge Cond: (s1.t1.c1 = s1.t4.c1)
         ->  Merge Join
               Merge Cond: (s1.t1.c1 = s1.t3.c1)
               ->  Index Scan using t1_pkey on t1
               ->  Index Scan using t3_pkey on t3
         ->  Index Scan using t4_pkey on t4
   ->  Sort
         Sort Key: s1.t2.c1
         ->  Seq Scan on t2
(26 rows)

/*+Leading(t4 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t2 t3 t1)
not used hint:
duplication hint:
error hint:

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Merge Join
   Merge Cond: (s1.t1.c1 = s1.t2.c1)
   InitPlan 1 (returns $0)
     ->  Aggregate
           ->  Merge Join
                 Merge Cond: (s1.t1.c1 = s1.t2.c1)
                 ->  Index Scan using t1_pkey on t1
                 ->  Sort
                       Sort Key: s1.t2.c1
                       ->  Hash Join
                             Hash Cond: (s1.t3.c1 = s1.t2.c1)
                             ->  Seq Scan on t3
                             ->  Hash
                                   ->  Hash Join
                                         Hash Cond: (s1.t4.c1 = s1.t2.c1)
                                         ->  Seq Scan on t4
                                         ->  Hash
                                               ->  Seq Scan on t2
   ->  Index Scan using t1_pkey on t1
   ->  Sort
         Sort Key: s1.t2.c1
         ->  Hash Join
               Hash Cond: (s1.t3.c1 = s1.t2.c1)
               ->  Seq Scan on t3
               ->  Hash
                     ->  Hash Join
                           Hash Cond: (s1.t4.c1 = s1.t2.c1)
                           ->  Seq Scan on t4
                           ->  Hash
                                 ->  Seq Scan on t2
(30 rows)

/*+Leading(st1 st2 st3 st4 t4 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2, s1.t3 st3, s1.t4 st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(st1 st2 st3 st4 t4 t2 t3 t1)
not used hint:
duplication hint:
error hint:

                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Index Scan using t1_pkey on t1
   ->  Sort
         Sort Key: t2.c1
         ->  Hash Join
               Hash Cond: (t3.c1 = t2.c1)
               ->  Seq Scan on t3
               ->  Hash
                     ->  Hash Join
                           Hash Cond: (t4.c1 = t2.c1)
                           ->  Seq Scan on t4
                           ->  Hash
                                 ->  Seq Scan on t2
   SubPlan 1
     ->  Aggregate
           ->  Result
                 One-Time Filter: ((t1.c1 = t2.c1) AND (t1.c1 = t3.c1) AND (t1.c1 = t4.c1))
                 ->  Nested Loop
                       ->  Nested Loop
                             ->  Nested Loop
                                   ->  Seq Scan on t1 st1
                                   ->  Materialize
                                         ->  Seq Scan on t2 st2
                             ->  Materialize
                                   ->  Seq Scan on t3 st3
                       ->  Materialize
                             ->  Seq Scan on t4 st4
(28 rows)

----
---- No. L-1-5 conflict table name
----
-- No. L-1-5-1
/*+Leading(t4 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t2 t3 t1)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                      
------------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Index Scan using t1_pkey on t1
   ->  Sort
         Sort Key: t2.c1
         ->  Hash Join
               Hash Cond: (t3.c1 = t2.c1)
               ->  Seq Scan on t3
               ->  Hash
                     ->  Hash Join
                           Hash Cond: (t4.c1 = t2.c1)
                           ->  Seq Scan on t4
                           ->  Hash
                                 ->  Seq Scan on t2
(14 rows)

-- No. L-1-5-2
/*+Leading(t4 t2 t3 t1 t4)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t2 t3 t1 t4)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                      
------------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Index Scan using t1_pkey on t1
   ->  Sort
         Sort Key: t2.c1
         ->  Hash Join
               Hash Cond: (t3.c1 = t2.c1)
               ->  Seq Scan on t3
               ->  Hash
                     ->  Hash Join
                           Hash Cond: (t4.c1 = t2.c1)
                           ->  Seq Scan on t4
                           ->  Hash
                                 ->  Seq Scan on t2
(14 rows)

/*+Leading(t4 t2 t3 t4)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
INFO:  hint syntax error at or near "Leading(t4 t2 t3 t4)"
DETAIL:  Relation name "t4" is duplicate.
LOG:  pg_hint_plan:
used hint:
not used hint:
duplication hint:
error hint:
Leading(t4 t2 t3 t4)

                    QUERY PLAN                    
--------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Merge Join
         Merge Cond: (t1.c1 = t4.c1)
         ->  Merge Join
               Merge Cond: (t1.c1 = t3.c1)
               ->  Index Scan using t1_pkey on t1
               ->  Index Scan using t3_pkey on t3
         ->  Index Scan using t4_pkey on t4
   ->  Sort
         Sort Key: t2.c1
         ->  Seq Scan on t2
(12 rows)

-- No. L-1-5-3
/*+Leading(t4 t2 t3 t1 t4 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t2 t3 t1 t4 t2 t3 t1)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                      
------------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Index Scan using t1_pkey on t1
   ->  Sort
         Sort Key: t2.c1
         ->  Hash Join
               Hash Cond: (t3.c1 = t2.c1)
               ->  Seq Scan on t3
               ->  Hash
                     ->  Hash Join
                           Hash Cond: (t4.c1 = t2.c1)
                           ->  Seq Scan on t4
                           ->  Hash
                                 ->  Seq Scan on t2
(14 rows)

/*+Leading(t4 t2 t2 t4)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
INFO:  hint syntax error at or near "Leading(t4 t2 t2 t4)"
DETAIL:  Relation name "t2" is duplicate.
LOG:  pg_hint_plan:
used hint:
not used hint:
duplication hint:
error hint:
Leading(t4 t2 t2 t4)

                    QUERY PLAN                    
--------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Merge Join
         Merge Cond: (t1.c1 = t4.c1)
         ->  Merge Join
               Merge Cond: (t1.c1 = t3.c1)
               ->  Index Scan using t1_pkey on t1
               ->  Index Scan using t3_pkey on t3
         ->  Index Scan using t4_pkey on t4
   ->  Sort
         Sort Key: t2.c1
         ->  Seq Scan on t2
(12 rows)

----
---- No. L-1-6 object type for the hint
----
-- No. L-1-6-1
/*+Leading(t4 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t2 t3 t1)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                      
------------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Index Scan using t1_pkey on t1
   ->  Sort
         Sort Key: t2.c1
         ->  Hash Join
               Hash Cond: (t3.c1 = t2.c1)
               ->  Seq Scan on t3
               ->  Hash
                     ->  Hash Join
                           Hash Cond: (t4.c1 = t2.c1)
                           ->  Seq Scan on t4
                           ->  Hash
                                 ->  Seq Scan on t2
(14 rows)

-- No. L-1-6-2
EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2, s1.p1 t3, s1.p1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
                    QUERY PLAN                     
---------------------------------------------------
 Hash Join
   Hash Cond: (t1.c1 = t4.c1)
   ->  Hash Join
         Hash Cond: (t1.c1 = t3.c1)
         ->  Hash Join
               Hash Cond: (t1.c1 = t2.c1)
               ->  Append
                     ->  Seq Scan on p1 t1
                     ->  Seq Scan on p1c1 t1
                     ->  Seq Scan on p1c2 t1
                     ->  Seq Scan on p1c3 t1
               ->  Hash
                     ->  Append
                           ->  Seq Scan on p1 t2
                           ->  Seq Scan on p1c1 t2
                           ->  Seq Scan on p1c2 t2
                           ->  Seq Scan on p1c3 t2
         ->  Hash
               ->  Append
                     ->  Seq Scan on p1 t3
                     ->  Seq Scan on p1c1 t3
                     ->  Seq Scan on p1c2 t3
                     ->  Seq Scan on p1c3 t3
   ->  Hash
         ->  Append
               ->  Seq Scan on p1 t4
               ->  Seq Scan on p1c1 t4
               ->  Seq Scan on p1c2 t4
               ->  Seq Scan on p1c3 t4
(29 rows)

/*+Leading(t4 t3 t2 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2, s1.p1 t3, s1.p1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t3 t2 t1)
not used hint:
duplication hint:
error hint:

                    QUERY PLAN                     
---------------------------------------------------
 Hash Join
   Hash Cond: (t2.c1 = t1.c1)
   ->  Hash Join
         Hash Cond: (t3.c1 = t2.c1)
         ->  Hash Join
               Hash Cond: (t3.c1 = t4.c1)
               ->  Append
                     ->  Seq Scan on p1 t3
                     ->  Seq Scan on p1c1 t3
                     ->  Seq Scan on p1c2 t3
                     ->  Seq Scan on p1c3 t3
               ->  Hash
                     ->  Append
                           ->  Seq Scan on p1 t4
                           ->  Seq Scan on p1c1 t4
                           ->  Seq Scan on p1c2 t4
                           ->  Seq Scan on p1c3 t4
         ->  Hash
               ->  Append
                     ->  Seq Scan on p1 t2
                     ->  Seq Scan on p1c1 t2
                     ->  Seq Scan on p1c2 t2
                     ->  Seq Scan on p1c3 t2
   ->  Hash
         ->  Append
               ->  Seq Scan on p1 t1
               ->  Seq Scan on p1c1 t1
               ->  Seq Scan on p1c2 t1
               ->  Seq Scan on p1c3 t1
(29 rows)

-- No. L-1-6-3
EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2, s1.ul1 t3, s1.ul1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
                 QUERY PLAN                 
--------------------------------------------
 Hash Join
   Hash Cond: (t1.c1 = t4.c1)
   ->  Hash Join
         Hash Cond: (t1.c1 = t3.c1)
         ->  Hash Join
               Hash Cond: (t1.c1 = t2.c1)
               ->  Seq Scan on ul1 t1
               ->  Hash
                     ->  Seq Scan on ul1 t2
         ->  Hash
               ->  Seq Scan on ul1 t3
   ->  Hash
         ->  Seq Scan on ul1 t4
(13 rows)

/*+Leading(t4 t3 t2 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2, s1.ul1 t3, s1.ul1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t3 t2 t1)
not used hint:
duplication hint:
error hint:

                 QUERY PLAN                 
--------------------------------------------
 Hash Join
   Hash Cond: (t2.c1 = t1.c1)
   ->  Hash Join
         Hash Cond: (t3.c1 = t2.c1)
         ->  Hash Join
               Hash Cond: (t3.c1 = t4.c1)
               ->  Seq Scan on ul1 t3
               ->  Hash
                     ->  Seq Scan on ul1 t4
         ->  Hash
               ->  Seq Scan on ul1 t2
   ->  Hash
         ->  Seq Scan on ul1 t1
(13 rows)

-- No. L-1-6-4
CREATE TEMP TABLE tm1 (LIKE s1.t1 INCLUDING ALL);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "tm1_pkey" for table "tm1"
EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2, tm1 t3, tm1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
                 QUERY PLAN                 
--------------------------------------------
 Hash Join
   Hash Cond: (t1.c1 = t4.c1)
   ->  Hash Join
         Hash Cond: (t1.c1 = t3.c1)
         ->  Hash Join
               Hash Cond: (t1.c1 = t2.c1)
               ->  Seq Scan on tm1 t1
               ->  Hash
                     ->  Seq Scan on tm1 t2
         ->  Hash
               ->  Seq Scan on tm1 t3
   ->  Hash
         ->  Seq Scan on tm1 t4
(13 rows)

/*+Leading(t4 t3 t2 t1)*/
EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2, tm1 t3, tm1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t3 t2 t1)
not used hint:
duplication hint:
error hint:

                 QUERY PLAN                 
--------------------------------------------
 Hash Join
   Hash Cond: (t2.c1 = t1.c1)
   ->  Hash Join
         Hash Cond: (t3.c1 = t2.c1)
         ->  Hash Join
               Hash Cond: (t3.c1 = t4.c1)
               ->  Seq Scan on tm1 t3
               ->  Hash
                     ->  Seq Scan on tm1 t4
         ->  Hash
               ->  Seq Scan on tm1 t2
   ->  Hash
         ->  Seq Scan on tm1 t1
(13 rows)

-- No. L-1-6-5
EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2, pg_catalog.pg_class t3, pg_catalog.pg_class t4 WHERE t1.oid = t2.oid AND t1.oid = t3.oid AND t1.oid = t4.oid;
                   QUERY PLAN                    
-------------------------------------------------
 Hash Join
   Hash Cond: (t1.oid = t4.oid)
   ->  Hash Join
         Hash Cond: (t1.oid = t3.oid)
         ->  Hash Join
               Hash Cond: (t1.oid = t2.oid)
               ->  Seq Scan on pg_class t1
               ->  Hash
                     ->  Seq Scan on pg_class t2
         ->  Hash
               ->  Seq Scan on pg_class t3
   ->  Hash
         ->  Seq Scan on pg_class t4
(13 rows)

/*+Leading(t4 t3 t2 t1)*/
EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2, pg_catalog.pg_class t3, pg_catalog.pg_class t4 WHERE t1.oid = t2.oid AND t1.oid = t3.oid AND t1.oid = t4.oid;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t3 t2 t1)
not used hint:
duplication hint:
error hint:

                   QUERY PLAN                    
-------------------------------------------------
 Hash Join
   Hash Cond: (t2.oid = t1.oid)
   ->  Hash Join
         Hash Cond: (t3.oid = t2.oid)
         ->  Hash Join
               Hash Cond: (t3.oid = t4.oid)
               ->  Seq Scan on pg_class t3
               ->  Hash
                     ->  Seq Scan on pg_class t4
         ->  Hash
               ->  Seq Scan on pg_class t2
   ->  Hash
         ->  Seq Scan on pg_class t1
(13 rows)

-- No. L-1-6-6
-- refer fdw.sql
-- No. L-1-6-7
EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2, s1.f1() t3, s1.f1() t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
                 QUERY PLAN                 
--------------------------------------------
 Nested Loop
   Join Filter: (t1.c1 = t4.c1)
   ->  Nested Loop
         Join Filter: (t1.c1 = t3.c1)
         ->  Nested Loop
               Join Filter: (t1.c1 = t2.c1)
               ->  Function Scan on f1 t1
               ->  Function Scan on f1 t2
         ->  Function Scan on f1 t3
   ->  Function Scan on f1 t4
(10 rows)

/*+Leading(t4 t3 t2 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2, s1.f1() t3, s1.f1() t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t3 t2 t1)
not used hint:
duplication hint:
error hint:

                 QUERY PLAN                 
--------------------------------------------
 Nested Loop
   Join Filter: (t2.c1 = t1.c1)
   ->  Nested Loop
         Join Filter: (t3.c1 = t2.c1)
         ->  Nested Loop
               Join Filter: (t3.c1 = t4.c1)
               ->  Function Scan on f1 t3
               ->  Function Scan on f1 t4
         ->  Function Scan on f1 t2
   ->  Function Scan on f1 t1
(10 rows)

-- No. L-1-6-8
EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3'), (4,4,4,'4')) AS t4  (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Nested Loop
   Join Filter: ("*VALUES*".column1 = "*VALUES*".column1)
   ->  Hash Join
         Hash Cond: ("*VALUES*".column1 = "*VALUES*".column1)
         ->  Values Scan on "*VALUES*"
         ->  Hash
               ->  Hash Join
                     Hash Cond: ("*VALUES*".column1 = "*VALUES*".column1)
                     ->  Values Scan on "*VALUES*"
                     ->  Hash
                           ->  Values Scan on "*VALUES*"
   ->  Values Scan on "*VALUES*"
(12 rows)

/*+Leading(t4 t3 t2 t1)*/
EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3'), (4,4,4,'4')) AS t4  (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
not used hint:
Leading(t4 t3 t2 t1)
duplication hint:
error hint:

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Nested Loop
   Join Filter: ("*VALUES*".column1 = "*VALUES*".column1)
   ->  Hash Join
         Hash Cond: ("*VALUES*".column1 = "*VALUES*".column1)
         ->  Values Scan on "*VALUES*"
         ->  Hash
               ->  Hash Join
                     Hash Cond: ("*VALUES*".column1 = "*VALUES*".column1)
                     ->  Values Scan on "*VALUES*"
                     ->  Hash
                           ->  Values Scan on "*VALUES*"
   ->  Values Scan on "*VALUES*"
(12 rows)

-- No. L-1-6-9
EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT st1.c1 FROM s1.t1 st1, s1.t1 st2, s1.t1 st3, s1.t1 st4 WHERE st1.c1 = st2.c1 AND st1.c1 = st3.c1 AND st1.c1 = st4.c1) SELECT * FROM c1 ct1, c1 ct2, c1 ct3, c1 ct4 WHERE ct1.c1 = ct2.c1 AND ct1.c1 = ct3.c1 AND ct1.c1 = ct4.c1;
                     QUERY PLAN                     
----------------------------------------------------
 Merge Join
   Merge Cond: (ct1.c1 = ct3.c1)
   CTE c1
     ->  Hash Join
           Hash Cond: (st1.c1 = st4.c1)
           ->  Hash Join
                 Hash Cond: (st1.c1 = st3.c1)
                 ->  Hash Join
                       Hash Cond: (st1.c1 = st2.c1)
                       ->  Seq Scan on t1 st1
                       ->  Hash
                             ->  Seq Scan on t1 st2
                 ->  Hash
                       ->  Seq Scan on t1 st3
           ->  Hash
                 ->  Seq Scan on t1 st4
   ->  Merge Join
         Merge Cond: (ct1.c1 = ct2.c1)
         ->  Sort
               Sort Key: ct1.c1
               ->  CTE Scan on c1 ct1
         ->  Sort
               Sort Key: ct2.c1
               ->  CTE Scan on c1 ct2
   ->  Materialize
         ->  Merge Join
               Merge Cond: (ct3.c1 = ct4.c1)
               ->  Sort
                     Sort Key: ct3.c1
                     ->  CTE Scan on c1 ct3
               ->  Sort
                     Sort Key: ct4.c1
                     ->  CTE Scan on c1 ct4
(33 rows)

/*+Leading(ct4 ct3 ct2 ct1 st4 st3 st2 st1)*/
EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT st1.c1 FROM s1.t1 st1, s1.t1 st2, s1.t1 st3, s1.t1 st4 WHERE st1.c1 = st2.c1 AND st1.c1 = st3.c1 AND st1.c1 = st4.c1) SELECT * FROM c1 ct1, c1 ct2, c1 ct3, c1 ct4 WHERE ct1.c1 = ct2.c1 AND ct1.c1 = ct3.c1 AND ct1.c1 = ct4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(ct4 ct3 ct2 ct1 st4 st3 st2 st1)
not used hint:
duplication hint:
error hint:

                       QUERY PLAN                        
---------------------------------------------------------
 Merge Join
   Merge Cond: (ct1.c1 = ct2.c1)
   CTE c1
     ->  Hash Join
           Hash Cond: (st2.c1 = st1.c1)
           ->  Hash Join
                 Hash Cond: (st3.c1 = st2.c1)
                 ->  Hash Join
                       Hash Cond: (st3.c1 = st4.c1)
                       ->  Seq Scan on t1 st3
                       ->  Hash
                             ->  Seq Scan on t1 st4
                 ->  Hash
                       ->  Seq Scan on t1 st2
           ->  Hash
                 ->  Seq Scan on t1 st1
   ->  Sort
         Sort Key: ct1.c1
         ->  CTE Scan on c1 ct1
   ->  Materialize
         ->  Merge Join
               Merge Cond: (ct2.c1 = ct3.c1)
               ->  Sort
                     Sort Key: ct2.c1
                     ->  CTE Scan on c1 ct2
               ->  Materialize
                     ->  Merge Join
                           Merge Cond: (ct3.c1 = ct4.c1)
                           ->  Sort
                                 Sort Key: ct3.c1
                                 ->  CTE Scan on c1 ct3
                           ->  Sort
                                 Sort Key: ct4.c1
                                 ->  CTE Scan on c1 ct4
(34 rows)

-- No. L-1-6-10
EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2, s1.v1 t3, s1.v1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
                  QUERY PLAN                  
----------------------------------------------
 Hash Join
   Hash Cond: (v1t1.c1 = v1t1.c1)
   ->  Hash Join
         Hash Cond: (v1t1.c1 = v1t1.c1)
         ->  Hash Join
               Hash Cond: (v1t1.c1 = v1t1.c1)
               ->  Seq Scan on t1 v1t1
               ->  Hash
                     ->  Seq Scan on t1 v1t1
         ->  Hash
               ->  Seq Scan on t1 v1t1
   ->  Hash
         ->  Seq Scan on t1 v1t1
(13 rows)

/*+Leading(t4 t3 t2 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2, s1.v1 t3, s1.v1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
not used hint:
Leading(t4 t3 t2 t1)
duplication hint:
error hint:

                  QUERY PLAN                  
----------------------------------------------
 Hash Join
   Hash Cond: (v1t1.c1 = v1t1.c1)
   ->  Hash Join
         Hash Cond: (v1t1.c1 = v1t1.c1)
         ->  Hash Join
               Hash Cond: (v1t1.c1 = v1t1.c1)
               ->  Seq Scan on t1 v1t1
               ->  Hash
                     ->  Seq Scan on t1 v1t1
         ->  Hash
               ->  Seq Scan on t1 v1t1
   ->  Hash
         ->  Seq Scan on t1 v1t1
(13 rows)

EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
                 QUERY PLAN                  
---------------------------------------------
 Hash Join
   Hash Cond: (v1t1.c1 = t4.c1)
   ->  Hash Join
         Hash Cond: (v1t1.c1 = v1t1_.c1)
         ->  Hash Join
               Hash Cond: (t3.c1 = v1t1.c1)
               ->  Seq Scan on t3
               ->  Hash
                     ->  Seq Scan on t1 v1t1
         ->  Hash
               ->  Seq Scan on t1 v1t1_
   ->  Hash
         ->  Seq Scan on t4
(13 rows)

/*+Leading(t4 v1t1_ v1t1 t3)*/
EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 v1t1_ v1t1 t3)
not used hint:
duplication hint:
error hint:

                  QUERY PLAN                  
----------------------------------------------
 Hash Join
   Hash Cond: (v1t1.c1 = t3.c1)
   ->  Hash Join
         Hash Cond: (v1t1_.c1 = v1t1.c1)
         ->  Hash Join
               Hash Cond: (t4.c1 = v1t1_.c1)
               ->  Seq Scan on t4
               ->  Hash
                     ->  Seq Scan on t1 v1t1_
         ->  Hash
               ->  Seq Scan on t1 v1t1
   ->  Hash
         ->  Seq Scan on t3
(13 rows)

-- No. L-1-6-11
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
                    QUERY PLAN                    
--------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Merge Join
         Merge Cond: (t1.c1 = t4.c1)
         ->  Merge Join
               Merge Cond: (t1.c1 = t3.c1)
               ->  Index Scan using t1_pkey on t1
               ->  Index Scan using t3_pkey on t3
         ->  Index Scan using t4_pkey on t4
   ->  Sort
         Sort Key: t2.c1
         ->  Seq Scan on t2
(12 rows)

/*+Leading(st4 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(st4 t2 t3 t1)
not used hint:
duplication hint:
error hint:

                   QUERY PLAN                   
------------------------------------------------
 Nested Loop
   ->  Merge Join
         Merge Cond: (t1.c1 = t2.c1)
         ->  Index Scan using t1_pkey on t1
         ->  Sort
               Sort Key: t2.c1
               ->  Hash Join
                     Hash Cond: (t3.c1 = t2.c1)
                     ->  Seq Scan on t3
                     ->  Hash
                           ->  Seq Scan on t2
   ->  Index Scan using t4_pkey on t4
         Index Cond: (c1 = t1.c1)
(13 rows)

/*+Leading(t4 t2 t3 t1)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
LOG:  pg_hint_plan:
used hint:
Leading(t4 t2 t3 t1)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                      
------------------------------------------------------
 Merge Join
   Merge Cond: (t1.c1 = t2.c1)
   ->  Index Scan using t1_pkey on t1
   ->  Sort
         Sort Key: t2.c1
         ->  Hash Join
               Hash Cond: (t3.c1 = t2.c1)
               ->  Seq Scan on t3
               ->  Hash
                     ->  Hash Join
                           Hash Cond: (t4.c1 = t2.c1)
                           ->  Seq Scan on t4
                           ->  Hash
                                 ->  Seq Scan on t2
(14 rows)

