EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
              QUERY PLAN              
--------------------------------------
 Merge Join
   Merge Cond: (t1.id = t2.id)
   ->  Index Scan using t1_pkey on t1
   ->  Index Scan using t2_pkey on t2
(4 rows)

EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.val = t2.val;
                QUERY PLAN                 
-------------------------------------------
 Merge Join
   Merge Cond: (t2.val = t1.val)
   ->  Index Scan using t2_val on t2
   ->  Materialize
         ->  Index Scan using t1_val on t1
(5 rows)

LOAD 'pg_hint_plan';
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
              QUERY PLAN              
--------------------------------------
 Merge Join
   Merge Cond: (t1.id = t2.id)
   ->  Index Scan using t1_pkey on t1
   ->  Index Scan using t2_pkey on t2
(4 rows)

EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.val = t2.val;
                QUERY PLAN                 
-------------------------------------------
 Merge Join
   Merge Cond: (t2.val = t1.val)
   ->  Index Scan using t2_val on t2
   ->  Materialize
         ->  Index Scan using t1_val on t1
(5 rows)

/*+ Test (t1 t2) */
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
INFO:  hint syntax error at or near "Test (t1 t2) "
DETAIL:  Keyword "Test" does not exist.
              QUERY PLAN              
--------------------------------------
 Merge Join
   Merge Cond: (t1.id = t2.id)
   ->  Index Scan using t1_pkey on t1
   ->  Index Scan using t2_pkey on t2
(4 rows)

SET pg_hint_plan.enable TO off;
/*+ Test (t1 t2) */
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
              QUERY PLAN              
--------------------------------------
 Merge Join
   Merge Cond: (t1.id = t2.id)
   ->  Index Scan using t1_pkey on t1
   ->  Index Scan using t2_pkey on t2
(4 rows)

SET pg_hint_plan.enable TO on;
/*+Set(enable_indexscan off)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
          QUERY PLAN          
------------------------------
 Hash Join
   Hash Cond: (t1.id = t2.id)
   ->  Seq Scan on t1
   ->  Hash
         ->  Seq Scan on t2
(5 rows)

/*+ Set(enable_indexscan off) Set(enable_hashjoin off) */
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
          QUERY PLAN           
-------------------------------
 Merge Join
   Merge Cond: (t1.id = t2.id)
   ->  Sort
         Sort Key: t1.id
         ->  Seq Scan on t1
   ->  Sort
         Sort Key: t2.id
         ->  Seq Scan on t2
(8 rows)

/*+ 	 Set 	 ( 	 enable_indexscan 	 off 	 ) 	 */
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
          QUERY PLAN          
------------------------------
 Hash Join
   Hash Cond: (t1.id = t2.id)
   ->  Seq Scan on t1
   ->  Hash
         ->  Seq Scan on t2
(5 rows)

/*+ 	 
	 	Set 	 
	 	( 	 
	 	enable_indexscan 	 
	 	off 	 
	 	) 	 
	 	*/	 	
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
          QUERY PLAN          
------------------------------
 Hash Join
   Hash Cond: (t1.id = t2.id)
   ->  Seq Scan on t1
   ->  Hash
         ->  Seq Scan on t2
(5 rows)

/*+ Set(enable_indexscan off)Set(enable_nestloop off)Set(enable_mergejoin off)	 	
	 	Set(enable_seqscan off)
	 	*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
                 QUERY PLAN                 
--------------------------------------------
 Hash Join
   Hash Cond: (t1.id = t2.id)
   ->  Index Scan using t1_pkey on t1
   ->  Hash
         ->  Index Scan using t2_pkey on t2
(5 rows)

/*+Set(work_mem "1M")*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
INFO:  invalid value for parameter "work_mem": "1M"
HINT:  Valid units for this parameter are "kB", "MB", and "GB".
              QUERY PLAN              
--------------------------------------
 Merge Join
   Merge Cond: (t1.id = t2.id)
   ->  Index Scan using t1_pkey on t1
   ->  Index Scan using t2_pkey on t2
(4 rows)

/*+Set(work_mem "1MB")*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
              QUERY PLAN              
--------------------------------------
 Merge Join
   Merge Cond: (t1.id = t2.id)
   ->  Index Scan using t1_pkey on t1
   ->  Index Scan using t2_pkey on t2
(4 rows)

/*+Set(work_mem TO "1MB")*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
INFO:  hint syntax error at or near ""1MB")"
DETAIL:  Closed parenthesis is necessary.
              QUERY PLAN              
--------------------------------------
 Merge Join
   Merge Cond: (t1.id = t2.id)
   ->  Index Scan using t1_pkey on t1
   ->  Index Scan using t2_pkey on t2
(4 rows)

/*+SeqScan(t1 t2)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
INFO:  hint syntax error at or near "t2)"
DETAIL:  Closed parenthesis is necessary.
              QUERY PLAN              
--------------------------------------
 Merge Join
   Merge Cond: (t1.id = t2.id)
   ->  Index Scan using t1_pkey on t1
   ->  Index Scan using t2_pkey on t2
(4 rows)

/*+SeqScan(t1)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
          QUERY PLAN          
------------------------------
 Hash Join
   Hash Cond: (t1.id = t2.id)
   ->  Seq Scan on t1
   ->  Hash
         ->  Seq Scan on t2
(5 rows)

/*+SeqScan(t1)IndexScan(t2)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
                 QUERY PLAN                 
--------------------------------------------
 Hash Join
   Hash Cond: (t1.id = t2.id)
   ->  Seq Scan on t1
   ->  Hash
         ->  Index Scan using t2_pkey on t2
(5 rows)

/*+BitmapScan(t2)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
              QUERY PLAN              
--------------------------------------
 Nested Loop
   ->  Seq Scan on t1
   ->  Index Scan using t2_pkey on t2
         Index Cond: (id = t1.id)
(4 rows)

/*+BitmapScan(t2)NoSeqScan(t1)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
              QUERY PLAN              
--------------------------------------
 Nested Loop
   ->  Index Scan using t1_pkey on t1
   ->  Index Scan using t2_pkey on t2
         Index Cond: (id = t1.id)
(4 rows)

/*+NoIndexScan(t1)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
          QUERY PLAN          
------------------------------
 Hash Join
   Hash Cond: (t1.id = t2.id)
   ->  Seq Scan on t1
   ->  Hash
         ->  Seq Scan on t2
(5 rows)

/*+NoBitmapScan(t1)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t4 WHERE t1.val < 10;
         QUERY PLAN         
----------------------------
 Nested Loop
   ->  Seq Scan on t1
         Filter: (val < 10)
   ->  Materialize
         ->  Seq Scan on t4
(5 rows)

/*+TidScan(t4)*/
EXPLAIN (COSTS false) SELECT * FROM t3, t4 WHERE t3.id = t4.id AND t4.ctid = '(1,1)';
                  QUERY PLAN                   
-----------------------------------------------
 Merge Join
   Merge Cond: (t3.id = t4.id)
   ->  Index Scan using t3_pkey on t3
   ->  Sort
         Sort Key: t4.id
         ->  Tid Scan on t4
               TID Cond: (ctid = '(1,1)'::tid)
(7 rows)

/*+NoTidScan(t1)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)';
              QUERY PLAN               
---------------------------------------
 Nested Loop
   ->  Seq Scan on t1
         Filter: (ctid = '(1,1)'::tid)
   ->  Index Scan using t2_pkey on t2
         Index Cond: (id = t1.id)
(5 rows)

/*+HashJoin(t1 t2)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
          QUERY PLAN          
------------------------------
 Hash Join
   Hash Cond: (t1.id = t2.id)
   ->  Seq Scan on t1
   ->  Hash
         ->  Seq Scan on t2
(5 rows)

/*+NestLoop(t1 t2)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
              QUERY PLAN              
--------------------------------------
 Nested Loop
   ->  Seq Scan on t2
   ->  Index Scan using t1_pkey on t1
         Index Cond: (id = t2.id)
(4 rows)

/*+NoMergeJoin(t1 t2)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
          QUERY PLAN          
------------------------------
 Hash Join
   Hash Cond: (t1.id = t2.id)
   ->  Seq Scan on t1
   ->  Hash
         ->  Seq Scan on t2
(5 rows)

/*+MergeJoin(t1 t3)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
             QUERY PLAN              
-------------------------------------
 Merge Join
   Merge Cond: (t1.val = t3.val)
   ->  Index Scan using t1_val on t1
   ->  Sort
         Sort Key: t3.val
         ->  Seq Scan on t3
(6 rows)

/*+NestLoop(t1 t3)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
             QUERY PLAN              
-------------------------------------
 Nested Loop
   ->  Seq Scan on t3
   ->  Index Scan using t1_val on t1
         Index Cond: (val = t3.val)
(4 rows)

/*+NoHashJoin(t1 t3)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
             QUERY PLAN              
-------------------------------------
 Nested Loop
   ->  Seq Scan on t3
   ->  Index Scan using t1_val on t1
         Index Cond: (val = t3.val)
(4 rows)

/*+MergeJoin(t4 t1 t2 t3)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
                    QUERY PLAN                    
--------------------------------------------------
 Merge Join
   Merge Cond: (t1.id = t4.id)
   ->  Merge Join
         Merge Cond: (t1.id = t3.id)
         ->  Merge Join
               Merge Cond: (t1.id = t2.id)
               ->  Index Scan using t1_pkey on t1
               ->  Index Scan using t2_pkey on t2
         ->  Index Scan using t3_pkey on t3
   ->  Sort
         Sort Key: t4.id
         ->  Seq Scan on t4
(12 rows)

/*+HashJoin(t3 t4 t1 t2)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
                       QUERY PLAN                       
--------------------------------------------------------
 Hash Join
   Hash Cond: (t3.id = t1.id)
   ->  Seq Scan on t3
   ->  Hash
         ->  Merge Join
               Merge Cond: (t1.id = t4.id)
               ->  Merge Join
                     Merge Cond: (t1.id = t2.id)
                     ->  Index Scan using t1_pkey on t1
                     ->  Index Scan using t2_pkey on t2
               ->  Sort
                     Sort Key: t4.id
                     ->  Seq Scan on t4
(13 rows)

/*+NestLoop(t2 t3 t4 t1) IndexScan(t3)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
                    QUERY PLAN                    
--------------------------------------------------
 Nested Loop
   ->  Merge Join
         Merge Cond: (t1.id = t4.id)
         ->  Merge Join
               Merge Cond: (t1.id = t2.id)
               ->  Index Scan using t1_pkey on t1
               ->  Index Scan using t2_pkey on t2
         ->  Sort
               Sort Key: t4.id
               ->  Seq Scan on t4
   ->  Index Scan using t3_pkey on t3
         Index Cond: (id = t1.id)
(12 rows)

/*+NoNestLoop(t4 t1 t3 t2)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
                    QUERY PLAN                    
--------------------------------------------------
 Merge Join
   Merge Cond: (t1.id = t4.id)
   ->  Merge Join
         Merge Cond: (t1.id = t3.id)
         ->  Merge Join
               Merge Cond: (t1.id = t2.id)
               ->  Index Scan using t1_pkey on t1
               ->  Index Scan using t2_pkey on t2
         ->  Index Scan using t3_pkey on t3
   ->  Sort
         Sort Key: t4.id
         ->  Seq Scan on t4
(12 rows)

/*+Leading(t3 t4)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
                    QUERY PLAN                    
--------------------------------------------------
 Nested Loop
   ->  Nested Loop
         ->  Merge Join
               Merge Cond: (t3.id = t4.id)
               ->  Index Scan using t3_pkey on t3
               ->  Sort
                     Sort Key: t4.id
                     ->  Seq Scan on t4
         ->  Index Scan using t2_pkey on t2
               Index Cond: (id = t3.id)
   ->  Index Scan using t1_pkey on t1
         Index Cond: (id = t2.id)
(12 rows)

/*+Leading(t3 t4 t1)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
                    QUERY PLAN                    
--------------------------------------------------
 Nested Loop
   ->  Merge Join
         Merge Cond: (t3.id = t1.id)
         ->  Merge Join
               Merge Cond: (t3.id = t4.id)
               ->  Index Scan using t3_pkey on t3
               ->  Sort
                     Sort Key: t4.id
                     ->  Seq Scan on t4
         ->  Index Scan using t1_pkey on t1
   ->  Index Scan using t2_pkey on t2
         Index Cond: (id = t1.id)
(12 rows)

/*+Leading(t3 t4 t1 t2)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
                    QUERY PLAN                    
--------------------------------------------------
 Nested Loop
   ->  Merge Join
         Merge Cond: (t3.id = t1.id)
         ->  Merge Join
               Merge Cond: (t3.id = t4.id)
               ->  Index Scan using t3_pkey on t3
               ->  Sort
                     Sort Key: t4.id
                     ->  Seq Scan on t4
         ->  Index Scan using t1_pkey on t1
   ->  Index Scan using t2_pkey on t2
         Index Cond: (id = t1.id)
(12 rows)

/*+Leading(t3 t4 t1 t2 t1)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
INFO:  hint syntax error at or near "Leading(t3 t4 t1 t2 t1)"
DETAIL:  In Leading hint, specified relation name 4 or less.
                    QUERY PLAN                    
--------------------------------------------------
 Nested Loop
   ->  Merge Join
         Merge Cond: (t3.id = t1.id)
         ->  Merge Join
               Merge Cond: (t3.id = t4.id)
               ->  Index Scan using t3_pkey on t3
               ->  Sort
                     Sort Key: t4.id
                     ->  Seq Scan on t4
         ->  Index Scan using t1_pkey on t1
   ->  Index Scan using t2_pkey on t2
         Index Cond: (id = t1.id)
(12 rows)

/*+Leading(t3 t4 t4)*/
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
                    QUERY PLAN                    
--------------------------------------------------
 Nested Loop
   ->  Nested Loop
         ->  Merge Join
               Merge Cond: (t3.id = t4.id)
               ->  Index Scan using t3_pkey on t3
               ->  Sort
                     Sort Key: t4.id
                     ->  Seq Scan on t4
         ->  Index Scan using t2_pkey on t2
               Index Cond: (id = t3.id)
   ->  Index Scan using t1_pkey on t1
         Index Cond: (id = t2.id)
(12 rows)

EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
                  QUERY PLAN                   
-----------------------------------------------
 Nested Loop
   ->  Values Scan on "*VALUES*"
   ->  Index Scan using t1_pkey on t1
         Index Cond: (id = "*VALUES*".column1)
(4 rows)

/*+HashJoin(t1 t2)*/
EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
INFO:  hint syntax error at or near "HashJoin(t1 t2)"
DETAIL:  Relation "t2" does not exist.
                  QUERY PLAN                   
-----------------------------------------------
 Nested Loop
   ->  Values Scan on "*VALUES*"
   ->  Index Scan using t1_pkey on t1
         Index Cond: (id = "*VALUES*".column1)
(4 rows)

/*+HashJoin(t1 *VALUES*)*/
EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
                QUERY PLAN                 
-------------------------------------------
 Hash Join
   Hash Cond: (t1.id = "*VALUES*".column1)
   ->  Seq Scan on t1
   ->  Hash
         ->  Values Scan on "*VALUES*"
(5 rows)

/*+HashJoin(t1 *VALUES*) IndexScan(t1) IndexScan(*VALUES*)*/
EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
                QUERY PLAN                 
-------------------------------------------
 Hash Join
   Hash Cond: (t1.id = "*VALUES*".column1)
   ->  Index Scan using t1_pkey on t1
   ->  Hash
         ->  Values Scan on "*VALUES*"
(5 rows)

