CREATE TABLE t1 (id int PRIMARY KEY, val int);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t1_pkey" for table "t1"
CREATE TABLE t2 (id int PRIMARY KEY, val int);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t2_pkey" for table "t2"
CREATE TABLE t3 (id int PRIMARY KEY, val int);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t3_pkey" for table "t3"
CREATE TABLE t4 (id int PRIMARY KEY, val int);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t4_pkey" for table "t4"
CREATE TABLE t5 (id int PRIMARY KEY, val int);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t5_pkey" for table "t5"
INSERT INTO t1 SELECT i, i FROM (SELECT generate_series(1, 10000) i) t;
INSERT INTO t2 SELECT i, i FROM (SELECT generate_series(1, 1000) i) t;
INSERT INTO t3 SELECT i, i FROM (SELECT generate_series(1, 100) i) t;
INSERT INTO t4 SELECT i, i FROM (SELECT generate_series(1, 10) i) t;
INSERT INTO t5 SELECT i, i % 100 FROM (SELECT generate_series(1, 10000) i) t;
CREATE INDEX t5_val ON t5 (val);
ANALYZE t1;
ANALYZE t2;
ANALYZE t3;
ANALYZE t4;
ANALYZE t5;
CREATE VIEW v1 AS SELECT id, val FROM t1;
CREATE VIEW v2 AS SELECT t1.id t1_id, t1.val t1_val, t2.id t2_id, t2.val t2_val FROM t1, t2 WHERE t1.id = t2.id;
CREATE VIEW v3 AS SELECT t_1.id t1_id, t_1.val t1_val, t_2.id t2_id, t_2.val t2_val FROM t1 t_1, t2 t_2 WHERE t_1.id = t_2.id;
CREATE VIEW v4 AS SELECT v_2.t1_id, t_3.id FROM v2 v_2, t3 t_3 WHERE v_2.t1_id = t_3.id;
SET enable_bitmapscan TO on;
SET enable_hashagg TO on;
SET enable_tidscan TO on;
SET enable_sort TO on;
SET enable_indexscan TO on;
SET enable_seqscan TO on;
SET enable_material TO on;
SET enable_hashjoin TO on;
SET enable_mergejoin TO on;
SET enable_nestloop TO on;
EXPLAIN SELECT * FROM t1, t2 WHERE t1.id = t2.id;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Merge Join  (cost=0.00..90.08 rows=1000 width=16)
   Merge Cond: (t1.id = t2.id)
   ->  Index Scan using t1_pkey on t1  (cost=0.00..318.26 rows=10000 width=8)
   ->  Index Scan using t2_pkey on t2  (cost=0.00..43.25 rows=1000 width=8)
(4 rows)

EXPLAIN SELECT * FROM t1, t2 WHERE t1.val = t2.val;
                            QUERY PLAN                            
------------------------------------------------------------------
 Hash Join  (cost=27.50..220.00 rows=1000 width=16)
   Hash Cond: (t1.val = t2.val)
   ->  Seq Scan on t1  (cost=0.00..145.00 rows=10000 width=8)
   ->  Hash  (cost=15.00..15.00 rows=1000 width=8)
         ->  Seq Scan on t2  (cost=0.00..15.00 rows=1000 width=8)
(5 rows)

LOAD 'pg_hint_plan';
EXPLAIN SELECT * FROM t1, t2 WHERE t1.id = t2.id;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Merge Join  (cost=0.00..90.08 rows=1000 width=16)
   Merge Cond: (t1.id = t2.id)
   ->  Index Scan using t1_pkey on t1  (cost=0.00..318.26 rows=10000 width=8)
   ->  Index Scan using t2_pkey on t2  (cost=0.00..43.25 rows=1000 width=8)
(4 rows)

EXPLAIN SELECT * FROM t1, t2 WHERE t1.val = t2.val;
                            QUERY PLAN                            
------------------------------------------------------------------
 Hash Join  (cost=27.50..220.00 rows=1000 width=16)
   Hash Cond: (t1.val = t2.val)
   ->  Seq Scan on t1  (cost=0.00..145.00 rows=10000 width=8)
   ->  Hash  (cost=15.00..15.00 rows=1000 width=8)
         ->  Seq Scan on t2  (cost=0.00..15.00 rows=1000 width=8)
(5 rows)

\q
